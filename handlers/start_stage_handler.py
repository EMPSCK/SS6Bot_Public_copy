from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram import types
import config
from queries import get_user_status_query
from queries import general_queries
from keyboards import chairmans_kb
from keyboards import scrutineer_kb
from keyboards import admins_kb
from queries import chairman_queries
from aiogram.fsm.context import FSMContext
from admin_moves import update_fttsar_judges
router = Router()


@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    await message.delete()
    await state.clear()
    user_status = await get_user_status_query.get_user_status(message.from_user.id)
    #–ê–¥–º–∏–Ω
    if user_status == 1:
        await message.answer('üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ admin –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6', reply_markup=admins_kb.menu_kb)

    #scrutinner
    if user_status == 2:
        active_comp = await general_queries.get_CompId(message.from_user.id)
        await chairman_queries.del_unactive_comp(message.from_user.id, active_comp)
        info = await general_queries.CompId_to_name(active_comp)
        await message.answer(f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ scrutineer –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}", reply_markup=scrutineer_kb.menu_kb)

    #chairman
    if user_status == 3:
        active_comp = await general_queries.get_CompId(message.from_user.id)
        await chairman_queries.del_unactive_comp(message.from_user.id, active_comp)
        info = await general_queries.CompId_to_name(active_comp)
        await message.answer(f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ chairman –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/judges - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É–¥–µ–π\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}", reply_markup = chairmans_kb.menu_kb)

    if user_status == 0:
        await message.answer("üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –≤ —Å–∏—Å—Ç–µ–º–µ", reply_markup=chairmans_kb.send_id_to_admin_kb)


@router.callback_query(F.data == 'send_id_to_admin')
async def cmd_start(callback: types.CallbackQuery):
    if callback.from_user.username is None:
        await callback.message.bot.send_message(config.ADMIN_ID, f'@{callback.from_user.first_name} {callback.from_user.last_name}: {callback.from_user.id}')
    else:
        await callback.message.bot.send_message(config.ADMIN_ID, f'@{callback.from_user.username}: {callback.from_user.id}')
    await callback.message.edit_text("‚úÖ–î–∞–Ω–Ω—ã–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã", reply_markup=chairmans_kb.update_status_kb)


@router.callback_query(F.data == 'update_status')
async def cmd_start(callback: types.CallbackQuery):
    user_status = await get_user_status_query.get_user_status(callback.from_user.id)
    active_comp = await general_queries.get_CompId(callback.from_user.id)
    info = await general_queries.CompId_to_name(active_comp)
    if user_status == 1:
        user_status = 'admin'
    elif user_status == 2:
        user_status = 'scrutineer'
    elif user_status == 3:
        user_status = 'chairman'
    else:
        user_status = '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'

    if user_status != '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω':
        if user_status == 'admin':
            await callback.message.edit_text('üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ admin –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6',
                                             reply_markup=admins_kb.menu_kb)

        # scrutinner
        if user_status == 'scrutineer':
            active_comp = await general_queries.get_CompId(callback.from_user.id)
            info = await general_queries.CompId_to_name(active_comp)
            await callback.message.edit_text(
                f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ scrutineer –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}",
                reply_markup=scrutineer_kb.menu_kb)

        # chairman
        if user_status == 'chairman':
            active_comp = await general_queries.get_CompId(callback.from_user.id)
            info = await general_queries.CompId_to_name(active_comp)
            await callback.message.edit_text(
                f"üëã–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ chairman –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–æ—Ç–∞ SS6\n\n/judges - –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—É–¥–µ–π\n/help - —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}",
                reply_markup=chairmans_kb.menu_kb)

    else:
        await callback.message.edit_text(
            f"üóì–°—Ç–∞—Ç—É—Å: {user_status}\n–ê–∫—Ç–∏–≤–Ω–æ–µ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏–µ: {info}\n–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ",
            reply_markup=chairmans_kb.update_status_kb)




@router.message(Command("updateftsarrlist"))
async def update_ftsarr_judges_list(message: types.Message):
    access = [6887839538, 834140698, 363846616, 5824158064]
    if message.from_user.id in access:
        await message.answer('–ó–∞–ø—É—â–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\n–ü—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è: 5 –º–∏–Ω.')
        status = await update_fttsar_judges.update_judges_list()
        if status == 1:
            await message.answer('–ü—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω')
        else:
            await message.answer('‚ùå–û—à–∏–±–∫–∞')


@router.message(Command("help"))
async def update_ftsarr_judges_list(message: types.Message):
    text = '''<b>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:</b>\n/judges - –Ω–∞—á–∞—Ç—å –∑–∞–≥—Ä—É–∑–∫—É —Å–ø–∏—Å–∫–∞ —Å—É–¥–µ–π, chairman/scrutineer\n\n/clean - —É–¥–∞–ª–∏—Ç—å –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –≤–Ω—É—Ç—Ä–∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è, chairman/scrutineer\n\n/free - –ø–æ–∫–∞–∑–∞—Ç—å —Å–≤–æ–±–æ–¥–Ω—ã—Ö –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–ø–∏—Å–∫–∞, chairman/scrutineer\n\n/updateftsarrlist - –æ–±–Ω–æ–≤–∏—Ç—å –æ–±—â–∏–π —Å–ø–∏—Å–æ–∫ —Å—É–¥–µ–π, –ú–∏—Ç—è1/–ú–∏—Ç—è2/–ê—Ä—Ç–µ–º1/–ê—Ä—Ç–µ–º2\n\n/delactive - —Å–Ω–µ—Å—Ç–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—Å–µ–º —Å—É–¥—å—è–º –≤–Ω—É—Ç—Ä–∏ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è, chairman/scrutineer'''
    await message.answer(text, parse_mode='HTML')